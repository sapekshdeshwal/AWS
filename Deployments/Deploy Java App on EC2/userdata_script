Content-Type: multipart/mixed; boundary="//"
MIME-Version: 1.0

--//

#cloud-config
cloud_final_modules:
- [scripts-user, always]

--//
Content-Type: text/x-shellscript; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

#!/bin/bash
sudo su - ec2-user
yum update -y
yum upgrade -y

# Java installation

yum install java-17-amazon-corretto-headless -y

# Maven installation
set -e
mvn_version=${mvn_version:-3.9.4}
url="https://dlcdn.apache.org/maven/maven-3/${mvn_version}/binaries/apache-maven-${mvn_version}-bin.tar.gz"
mkdir -p /opt/maven
install_dir="/opt/maven"
curl -fsSL ${url} | tar zx --strip-components=1 -C ${install_dir}
cat << EOF > /etc/profile.d/maven.sh
#!/bin/sh
export MAVEN_HOME=${install_dir}
export M2_HOME=${install_dir}
export M2=${install_dir}/bin
export PATH=${install_dir}/bin:$PATH
EOF
source /etc/profile.d/maven.sh

# Export a CodeArtifact authorization token for authorization to your repository from your preferred shell.
AWS_ACCOUNT_ID="054037107230"
REGION="us-east-2"
DOMAIN_NAME="thecloudnation"
export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain $DOMAIN_NAME --domain-owner $AWS_ACCOUNT_ID --region $REGION --query authorizationToken --output text`

# Define the directory for Maven settings
MAVEN_SETTINGS_DIR="/home/ec2-user/.m2"
MAVEN_SETTINGS_FILE="$MAVEN_SETTINGS_DIR/settings.xml"

# Create the .m2 directory if it doesn't exist
mkdir -p "$MAVEN_SETTINGS_DIR"

# Write the settings.xml content
cat <<EOL > "$MAVEN_SETTINGS_FILE"
<settings>
<servers>
  <server>
    <id>thecloudnation-customer</id>
    <username>aws</username>
    <password>\${env.CODEARTIFACT_AUTH_TOKEN}</password>
  </server>
</servers>
<profiles>
  <profile>
    <id>thecloudnation-customer</id>
    <activation>
      <activeByDefault>true</activeByDefault>
    </activation>
    <repositories>
      <repository>
        <id>thecloudnation-customer</id>
        <url>https://thecloudnation-054037107230.d.codeartifact.us-east-2.amazonaws.com/maven/customer/</url>
      </repository>
    </repositories>
  </profile>
</profiles>
   <activeProfiles>
      <activeProfile>thecloudnation-customer</activeProfile>
   </activeProfiles>
</settings>
EOL

# Set permissions for the settings.xml file
chmod 600 "$MAVEN_SETTINGS_FILE"

# Output to verify creation
echo "Maven settings.xml has been created at $MAVEN_SETTINGS_FILE"

#Download artifact and run the spring boot application
mkdir -p /home/ec2-user/java/
cp /home/ec2-user/.m2/repository/com/naveen/customer/1.0.1-SNAPSHOT/customer-1.0.1-SNAPSHOT.jar /home/ec2-user/java/
java -jar /home/ec2-user/java/customer-1.0.1-SNAPSHOT.jar > /var/log/my-app.log 2>&1 &


--//--
